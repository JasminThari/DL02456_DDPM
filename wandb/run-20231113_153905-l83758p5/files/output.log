
0
Traceback (most recent call last):
  File "DDPM.py", line 125, in <module>
    train(args)
  File "DDPM.py", line 91, in train
    loss.backward()
  File "/work3/s204148/DL02456_DDPM/venv3/lib/python3.8/site-packages/torch/_tensor.py", line 363, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph, inputs=inputs)
  File "/work3/s204148/DL02456_DDPM/venv3/lib/python3.8/site-packages/torch/autograd/__init__.py", line 173, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
RuntimeError: CUDA out of memory. Tried to allocate 3.00 GiB (GPU 0; 39.39 GiB total capacity; 7.29 GiB already allocated; 2.76 GiB free; 10.32 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF